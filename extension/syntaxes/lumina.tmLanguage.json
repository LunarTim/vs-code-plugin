{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lumina",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#types"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                "name": "keyword.control.lumina",
                "match": "\\b(let|const|var|function|if|else|for|return)\\b"
            }]
        },
        "strings": {
            "name": "string.quoted.double.lumina",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lumina",
                    "match": "\\\\."
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.lumina",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.lumina",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "numbers": {
            "name": "constant.numeric.lumina",
            "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.lumina",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
                },
                {
                    "name": "support.function.lumina",
                    "match": "\\b(console\\.log)\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "support.type.lumina",
                    "match": "\\b(number|string|boolean|void)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lumina",
                    "match": "\\+\\+|--|\\+|-|\\*|/"
                },
                {
                    "name": "keyword.operator.assignment.lumina",
                    "match": "=|\\+=|-=|\\*=|/="
                },
                {
                    "name": "keyword.operator.comparison.lumina",
                    "match": "==|!=|>|<|>=|<="
                },
                {
                    "name": "keyword.operator.logical.lumina",
                    "match": "&&|\\|\\|"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.property.lumina",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\.length\\b"
                },
                {
                    "name": "variable.other.readwrite.lumina",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        }
    },
    "scopeName": "source.lumina"
} 