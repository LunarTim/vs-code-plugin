// Generated from src/grammar/Lumina.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class LuminaLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly NUMBER = 31;
	public static readonly STRING = 32;
	public static readonly BOOLEAN = 33;
	public static readonly IDENTIFIER = 34;
	public static readonly WS = 35;
	public static readonly COMMENT = 36;
	public static readonly MULTILINE_COMMENT = 37;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "NUMBER", "STRING", "BOOLEAN", 
		"IDENTIFIER", "WS", "COMMENT", "MULTILINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'let'", "':'", "'='", "';'", "'function'", "'('", "')'", "','", 
		"'number'", "'string'", "'boolean'", "'void'", "'{'", "'}'", "'if'", "'else'", 
		"'for'", "'return'", "'*'", "'/'", "'+'", "'-'", "'=='", "'!='", "'<'", 
		"'>'", "'<='", "'>='", "'&&'", "'||'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "NUMBER", "STRING", "BOOLEAN", "IDENTIFIER", 
		"WS", "COMMENT", "MULTILINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(LuminaLexer._LITERAL_NAMES, LuminaLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return LuminaLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(LuminaLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Lumina.g4"; }

	// @Override
	public get ruleNames(): string[] { return LuminaLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return LuminaLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return LuminaLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return LuminaLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\'\u0100\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1F\x03\x1F\x03\x1F\x03 \x06 \xB8\n \r \x0E \xB9\x03 \x03 \x06 \xBE" +
		"\n \r \x0E \xBF\x05 \xC2\n \x03!\x03!\x03!\x03!\x07!\xC8\n!\f!\x0E!\xCB" +
		"\v!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x05" +
		"\"\xD8\n\"\x03#\x03#\x07#\xDC\n#\f#\x0E#\xDF\v#\x03$\x06$\xE2\n$\r$\x0E" +
		"$\xE3\x03$\x03$\x03%\x03%\x03%\x03%\x07%\xEC\n%\f%\x0E%\xEF\v%\x03%\x03" +
		"%\x03&\x03&\x03&\x03&\x07&\xF7\n&\f&\x0E&\xFA\v&\x03&\x03&\x03&\x03&\x03" +
		"&\x03\xF8\x02\x02\'\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02" +
		"&K\x02\'\x03\x02\b\x03\x022;\x05\x02\f\f\x0F\x0F$$\x05\x02C\\aac|\x06" +
		"\x022;C\\aac|\x05\x02\v\f\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x02\u0109\x02" +
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
		"\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
		"\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
		"\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
		"C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02" +
		"\x02\x02\x02K\x03\x02\x02\x02\x03M\x03\x02\x02\x02\x05Q\x03\x02\x02\x02" +
		"\x07S\x03\x02\x02\x02\tU\x03\x02\x02\x02\vW\x03\x02\x02\x02\r`\x03\x02" +
		"\x02\x02\x0Fb\x03\x02\x02\x02\x11d\x03\x02\x02\x02\x13f\x03\x02\x02\x02" +
		"\x15m\x03\x02\x02\x02\x17t\x03\x02\x02\x02\x19|\x03\x02\x02\x02\x1B\x81" +
		"\x03\x02\x02\x02\x1D\x83\x03\x02\x02\x02\x1F\x85\x03\x02\x02\x02!\x88" +
		"\x03\x02\x02\x02#\x8D\x03\x02\x02\x02%\x91\x03\x02\x02\x02\'\x98\x03\x02" +
		"\x02\x02)\x9A\x03\x02\x02\x02+\x9C\x03\x02\x02\x02-\x9E\x03\x02\x02\x02" +
		"/\xA0\x03\x02\x02\x021\xA3\x03\x02\x02\x023\xA6\x03\x02\x02\x025\xA8\x03" +
		"\x02\x02\x027\xAA\x03\x02\x02\x029\xAD\x03\x02\x02\x02;\xB0\x03\x02\x02" +
		"\x02=\xB3\x03\x02\x02\x02?\xB7\x03\x02\x02\x02A\xC3\x03\x02\x02\x02C\xD7" +
		"\x03\x02\x02\x02E\xD9\x03\x02\x02\x02G\xE1\x03\x02\x02\x02I\xE7\x03\x02" +
		"\x02\x02K\xF2\x03\x02\x02\x02MN\x07n\x02\x02NO\x07g\x02\x02OP\x07v\x02" +
		"\x02P\x04\x03\x02\x02\x02QR\x07<\x02\x02R\x06\x03\x02\x02\x02ST\x07?\x02" +
		"\x02T\b\x03\x02\x02\x02UV\x07=\x02\x02V\n\x03\x02\x02\x02WX\x07h\x02\x02" +
		"XY\x07w\x02\x02YZ\x07p\x02\x02Z[\x07e\x02\x02[\\\x07v\x02\x02\\]\x07k" +
		"\x02\x02]^\x07q\x02\x02^_\x07p\x02\x02_\f\x03\x02\x02\x02`a\x07*\x02\x02" +
		"a\x0E\x03\x02\x02\x02bc\x07+\x02\x02c\x10\x03\x02\x02\x02de\x07.\x02\x02" +
		"e\x12\x03\x02\x02\x02fg\x07p\x02\x02gh\x07w\x02\x02hi\x07o\x02\x02ij\x07" +
		"d\x02\x02jk\x07g\x02\x02kl\x07t\x02\x02l\x14\x03\x02\x02\x02mn\x07u\x02" +
		"\x02no\x07v\x02\x02op\x07t\x02\x02pq\x07k\x02\x02qr\x07p\x02\x02rs\x07" +
		"i\x02\x02s\x16\x03\x02\x02\x02tu\x07d\x02\x02uv\x07q\x02\x02vw\x07q\x02" +
		"\x02wx\x07n\x02\x02xy\x07g\x02\x02yz\x07c\x02\x02z{\x07p\x02\x02{\x18" +
		"\x03\x02\x02\x02|}\x07x\x02\x02}~\x07q\x02\x02~\x7F\x07k\x02\x02\x7F\x80" +
		"\x07f\x02\x02\x80\x1A\x03\x02\x02\x02\x81\x82\x07}\x02\x02\x82\x1C\x03" +
		"\x02\x02\x02\x83\x84\x07\x7F\x02\x02\x84\x1E\x03\x02\x02\x02\x85\x86\x07" +
		"k\x02\x02\x86\x87\x07h\x02\x02\x87 \x03\x02\x02\x02\x88\x89\x07g\x02\x02" +
		"\x89\x8A\x07n\x02\x02\x8A\x8B\x07u\x02\x02\x8B\x8C\x07g\x02\x02\x8C\"" +
		"\x03\x02\x02\x02\x8D\x8E\x07h\x02\x02\x8E\x8F\x07q\x02\x02\x8F\x90\x07" +
		"t\x02\x02\x90$\x03\x02\x02\x02\x91\x92\x07t\x02\x02\x92\x93\x07g\x02\x02" +
		"\x93\x94\x07v\x02\x02\x94\x95\x07w\x02\x02\x95\x96\x07t\x02\x02\x96\x97" +
		"\x07p\x02\x02\x97&\x03\x02\x02\x02\x98\x99\x07,\x02\x02\x99(\x03\x02\x02" +
		"\x02\x9A\x9B\x071\x02\x02\x9B*\x03\x02\x02\x02\x9C\x9D\x07-\x02\x02\x9D" +
		",\x03\x02\x02\x02\x9E\x9F\x07/\x02\x02\x9F.\x03\x02\x02\x02\xA0\xA1\x07" +
		"?\x02\x02\xA1\xA2\x07?\x02\x02\xA20\x03\x02\x02\x02\xA3\xA4\x07#\x02\x02" +
		"\xA4\xA5\x07?\x02\x02\xA52\x03\x02\x02\x02\xA6\xA7\x07>\x02\x02\xA74\x03" +
		"\x02\x02\x02\xA8\xA9\x07@\x02\x02\xA96\x03\x02\x02\x02\xAA\xAB\x07>\x02" +
		"\x02\xAB\xAC\x07?\x02\x02\xAC8\x03\x02\x02\x02\xAD\xAE\x07@\x02\x02\xAE" +
		"\xAF\x07?\x02\x02\xAF:\x03\x02\x02\x02\xB0\xB1\x07(\x02\x02\xB1\xB2\x07" +
		"(\x02\x02\xB2<\x03\x02\x02\x02\xB3\xB4\x07~\x02\x02\xB4\xB5\x07~\x02\x02" +
		"\xB5>\x03\x02\x02\x02\xB6\xB8\t\x02\x02\x02\xB7\xB6\x03\x02\x02\x02\xB8" +
		"\xB9\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xBA" +
		"\xC1\x03\x02\x02\x02\xBB\xBD\x070\x02\x02\xBC\xBE\t\x02\x02\x02\xBD\xBC" +
		"\x03\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF\xBD\x03\x02\x02\x02\xBF\xC0" +
		"\x03\x02\x02\x02\xC0\xC2\x03\x02\x02\x02\xC1\xBB\x03\x02\x02\x02\xC1\xC2" +
		"\x03\x02\x02\x02\xC2@\x03\x02\x02\x02\xC3\xC9\x07$\x02\x02\xC4\xC8\n\x03" +
		"\x02\x02\xC5\xC6\x07^\x02\x02\xC6\xC8\x07$\x02\x02\xC7\xC4\x03\x02\x02" +
		"\x02\xC7\xC5\x03\x02\x02\x02\xC8\xCB\x03\x02\x02\x02\xC9\xC7\x03\x02\x02" +
		"\x02\xC9\xCA\x03\x02\x02\x02\xCA\xCC\x03\x02\x02\x02\xCB\xC9\x03\x02\x02" +
		"\x02\xCC\xCD\x07$\x02\x02\xCDB\x03\x02\x02\x02\xCE\xCF\x07v\x02\x02\xCF" +
		"\xD0\x07t\x02\x02\xD0\xD1\x07w\x02\x02\xD1\xD8\x07g\x02\x02\xD2\xD3\x07" +
		"h\x02\x02\xD3\xD4\x07c\x02\x02\xD4\xD5\x07n\x02\x02\xD5\xD6\x07u\x02\x02" +
		"\xD6\xD8\x07g\x02\x02\xD7\xCE\x03\x02\x02\x02\xD7\xD2\x03\x02\x02\x02" +
		"\xD8D\x03\x02\x02\x02\xD9\xDD\t\x04\x02\x02\xDA\xDC\t\x05\x02\x02\xDB" +
		"\xDA\x03\x02\x02\x02\xDC\xDF\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDD" +
		"\xDE\x03\x02\x02\x02\xDEF\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xE0" +
		"\xE2\t\x06\x02\x02\xE1\xE0\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3" +
		"\xE1\x03\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5" +
		"\xE6\b$\x02\x02\xE6H\x03\x02\x02\x02\xE7\xE8\x071\x02\x02\xE8\xE9\x07" +
		"1\x02\x02\xE9\xED\x03\x02\x02\x02\xEA\xEC\n\x07\x02\x02\xEB\xEA\x03\x02" +
		"\x02\x02\xEC\xEF\x03\x02\x02\x02\xED\xEB\x03\x02\x02\x02\xED\xEE\x03\x02" +
		"\x02\x02\xEE\xF0\x03\x02\x02\x02\xEF\xED\x03\x02\x02\x02\xF0\xF1\b%\x02" +
		"\x02\xF1J\x03\x02\x02\x02\xF2\xF3\x071\x02\x02\xF3\xF4\x07,\x02\x02\xF4" +
		"\xF8\x03\x02\x02\x02\xF5\xF7\v\x02\x02\x02\xF6\xF5\x03\x02\x02\x02\xF7" +
		"\xFA\x03\x02\x02\x02\xF8\xF9\x03\x02\x02\x02\xF8\xF6\x03\x02\x02\x02\xF9" +
		"\xFB\x03\x02\x02\x02\xFA\xF8\x03\x02\x02\x02\xFB\xFC\x07,\x02\x02\xFC" +
		"\xFD\x071\x02\x02\xFD\xFE\x03\x02\x02\x02\xFE\xFF\b&\x02\x02\xFFL\x03" +
		"\x02\x02\x02\r\x02\xB9\xBF\xC1\xC7\xC9\xD7\xDD\xE3\xED\xF8\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LuminaLexer.__ATN) {
			LuminaLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(LuminaLexer._serializedATN));
		}

		return LuminaLexer.__ATN;
	}

}

