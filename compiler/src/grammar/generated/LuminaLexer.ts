// Generated from src/grammar/Lumina.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class LuminaLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly NUMBER = 37;
	public static readonly STRING = 38;
	public static readonly BOOLEAN = 39;
	public static readonly IDENTIFIER = 40;
	public static readonly WS = 41;
	public static readonly COMMENT = 42;
	public static readonly MULTILINE_COMMENT = 43;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "NUMBER", "STRING", "BOOLEAN", "IDENTIFIER", 
		"WS", "COMMENT", "MULTILINE_COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'let'", "':'", "'='", "';'", "'+='", "'-='", "'*='", "'/='", 
		"'++'", "'--'", "'function'", "'('", "')'", "','", "'number'", "'string'", 
		"'boolean'", "'void'", "'{'", "'}'", "'if'", "'else'", "'for'", "'return'", 
		"'*'", "'/'", "'+'", "'-'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", 
		"'&&'", "'||'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "NUMBER", "STRING", "BOOLEAN", "IDENTIFIER", "WS", 
		"COMMENT", "MULTILINE_COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(LuminaLexer._LITERAL_NAMES, LuminaLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return LuminaLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(LuminaLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Lumina.g4"; }

	// @Override
	public get ruleNames(): string[] { return LuminaLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return LuminaLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return LuminaLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return LuminaLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02-\u011E\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03\"" +
		"\x03#\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x06&\xD6\n&\r&\x0E" +
		"&\xD7\x03&\x03&\x06&\xDC\n&\r&\x0E&\xDD\x05&\xE0\n&\x03\'\x03\'\x03\'" +
		"\x03\'\x07\'\xE6\n\'\f\'\x0E\'\xE9\v\'\x03\'\x03\'\x03(\x03(\x03(\x03" +
		"(\x03(\x03(\x03(\x03(\x03(\x05(\xF6\n(\x03)\x03)\x07)\xFA\n)\f)\x0E)\xFD" +
		"\v)\x03*\x06*\u0100\n*\r*\x0E*\u0101\x03*\x03*\x03+\x03+\x03+\x03+\x07" +
		"+\u010A\n+\f+\x0E+\u010D\v+\x03+\x03+\x03,\x03,\x03,\x03,\x07,\u0115\n" +
		",\f,\x0E,\u0118\v,\x03,\x03,\x03,\x03,\x03,\x03\u0116\x02\x02-\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02" +
		" ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+" +
		"U\x02,W\x02-\x03\x02\b\x03\x022;\x05\x02\f\f\x0F\x0F$$\x05\x02C\\aac|" +
		"\x06\x022;C\\aac|\x05\x02\v\f\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x02\u0127" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
		"\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02" +
		"W\x03\x02\x02\x02\x03Y\x03\x02\x02\x02\x05]\x03\x02\x02\x02\x07_\x03\x02" +
		"\x02\x02\ta\x03\x02\x02\x02\vc\x03\x02\x02\x02\rf\x03\x02\x02\x02\x0F" +
		"i\x03\x02\x02\x02\x11l\x03\x02\x02\x02\x13o\x03\x02\x02\x02\x15r\x03\x02" +
		"\x02\x02\x17u\x03\x02\x02\x02\x19~\x03\x02\x02\x02\x1B\x80\x03\x02\x02" +
		"\x02\x1D\x82\x03\x02\x02\x02\x1F\x84\x03\x02\x02\x02!\x8B\x03\x02\x02" +
		"\x02#\x92\x03\x02\x02\x02%\x9A\x03\x02\x02\x02\'\x9F\x03\x02\x02\x02)" +
		"\xA1\x03\x02\x02\x02+\xA3\x03\x02\x02\x02-\xA6\x03\x02\x02\x02/\xAB\x03" +
		"\x02\x02\x021\xAF\x03\x02\x02\x023\xB6\x03\x02\x02\x025\xB8\x03\x02\x02" +
		"\x027\xBA\x03\x02\x02\x029\xBC\x03\x02\x02\x02;\xBE\x03\x02\x02\x02=\xC1" +
		"\x03\x02\x02\x02?\xC4\x03\x02\x02\x02A\xC6\x03\x02\x02\x02C\xC8\x03\x02" +
		"\x02\x02E\xCB\x03\x02\x02\x02G\xCE\x03\x02\x02\x02I\xD1\x03\x02\x02\x02" +
		"K\xD5\x03\x02\x02\x02M\xE1\x03\x02\x02\x02O\xF5\x03\x02\x02\x02Q\xF7\x03" +
		"\x02\x02\x02S\xFF\x03\x02\x02\x02U\u0105\x03\x02\x02\x02W\u0110\x03\x02" +
		"\x02\x02YZ\x07n\x02\x02Z[\x07g\x02\x02[\\\x07v\x02\x02\\\x04\x03\x02\x02" +
		"\x02]^\x07<\x02\x02^\x06\x03\x02\x02\x02_`\x07?\x02\x02`\b\x03\x02\x02" +
		"\x02ab\x07=\x02\x02b\n\x03\x02\x02\x02cd\x07-\x02\x02de\x07?\x02\x02e" +
		"\f\x03\x02\x02\x02fg\x07/\x02\x02gh\x07?\x02\x02h\x0E\x03\x02\x02\x02" +
		"ij\x07,\x02\x02jk\x07?\x02\x02k\x10\x03\x02\x02\x02lm\x071\x02\x02mn\x07" +
		"?\x02\x02n\x12\x03\x02\x02\x02op\x07-\x02\x02pq\x07-\x02\x02q\x14\x03" +
		"\x02\x02\x02rs\x07/\x02\x02st\x07/\x02\x02t\x16\x03\x02\x02\x02uv\x07" +
		"h\x02\x02vw\x07w\x02\x02wx\x07p\x02\x02xy\x07e\x02\x02yz\x07v\x02\x02" +
		"z{\x07k\x02\x02{|\x07q\x02\x02|}\x07p\x02\x02}\x18\x03\x02\x02\x02~\x7F" +
		"\x07*\x02\x02\x7F\x1A\x03\x02\x02\x02\x80\x81\x07+\x02\x02\x81\x1C\x03" +
		"\x02\x02\x02\x82\x83\x07.\x02\x02\x83\x1E\x03\x02\x02\x02\x84\x85\x07" +
		"p\x02\x02\x85\x86\x07w\x02\x02\x86\x87\x07o\x02\x02\x87\x88\x07d\x02\x02" +
		"\x88\x89\x07g\x02\x02\x89\x8A\x07t\x02\x02\x8A \x03\x02\x02\x02\x8B\x8C" +
		"\x07u\x02\x02\x8C\x8D\x07v\x02\x02\x8D\x8E\x07t\x02\x02\x8E\x8F\x07k\x02" +
		"\x02\x8F\x90\x07p\x02\x02\x90\x91\x07i\x02\x02\x91\"\x03\x02\x02\x02\x92" +
		"\x93\x07d\x02\x02\x93\x94\x07q\x02\x02\x94\x95\x07q\x02\x02\x95\x96\x07" +
		"n\x02\x02\x96\x97\x07g\x02\x02\x97\x98\x07c\x02\x02\x98\x99\x07p\x02\x02" +
		"\x99$\x03\x02\x02\x02\x9A\x9B\x07x\x02\x02\x9B\x9C\x07q\x02\x02\x9C\x9D" +
		"\x07k\x02\x02\x9D\x9E\x07f\x02\x02\x9E&\x03\x02\x02\x02\x9F\xA0\x07}\x02" +
		"\x02\xA0(\x03\x02\x02\x02\xA1\xA2\x07\x7F\x02\x02\xA2*\x03\x02\x02\x02" +
		"\xA3\xA4\x07k\x02\x02\xA4\xA5\x07h\x02\x02\xA5,\x03\x02\x02\x02\xA6\xA7" +
		"\x07g\x02\x02\xA7\xA8\x07n\x02\x02\xA8\xA9\x07u\x02\x02\xA9\xAA\x07g\x02" +
		"\x02\xAA.\x03\x02\x02\x02\xAB\xAC\x07h\x02\x02\xAC\xAD\x07q\x02\x02\xAD" +
		"\xAE\x07t\x02\x02\xAE0\x03\x02\x02\x02\xAF\xB0\x07t\x02\x02\xB0\xB1\x07" +
		"g\x02\x02\xB1\xB2\x07v\x02\x02\xB2\xB3\x07w\x02\x02\xB3\xB4\x07t\x02\x02" +
		"\xB4\xB5\x07p\x02\x02\xB52\x03\x02\x02\x02\xB6\xB7\x07,\x02\x02\xB74\x03" +
		"\x02\x02\x02\xB8\xB9\x071\x02\x02\xB96\x03\x02\x02\x02\xBA\xBB\x07-\x02" +
		"\x02\xBB8\x03\x02\x02\x02\xBC\xBD\x07/\x02\x02\xBD:\x03\x02\x02\x02\xBE" +
		"\xBF\x07?\x02\x02\xBF\xC0\x07?\x02\x02\xC0<\x03\x02\x02\x02\xC1\xC2\x07" +
		"#\x02\x02\xC2\xC3\x07?\x02\x02\xC3>\x03\x02\x02\x02\xC4\xC5\x07>\x02\x02" +
		"\xC5@\x03\x02\x02\x02\xC6\xC7\x07@\x02\x02\xC7B\x03\x02\x02\x02\xC8\xC9" +
		"\x07>\x02\x02\xC9\xCA\x07?\x02\x02\xCAD\x03\x02\x02\x02\xCB\xCC\x07@\x02" +
		"\x02\xCC\xCD\x07?\x02\x02\xCDF\x03\x02\x02\x02\xCE\xCF\x07(\x02\x02\xCF" +
		"\xD0\x07(\x02\x02\xD0H\x03\x02\x02\x02\xD1\xD2\x07~\x02\x02\xD2\xD3\x07" +
		"~\x02\x02\xD3J\x03\x02\x02\x02\xD4\xD6\t\x02\x02\x02\xD5\xD4\x03\x02\x02" +
		"\x02\xD6\xD7\x03\x02\x02\x02\xD7\xD5\x03\x02\x02\x02\xD7\xD8\x03\x02\x02" +
		"\x02\xD8\xDF\x03\x02\x02\x02\xD9\xDB\x070\x02\x02\xDA\xDC\t\x02\x02\x02" +
		"\xDB\xDA\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02" +
		"\xDD\xDE\x03\x02\x02\x02\xDE\xE0\x03\x02\x02\x02\xDF\xD9\x03\x02\x02\x02" +
		"\xDF\xE0\x03\x02\x02\x02\xE0L\x03\x02\x02\x02\xE1\xE7\x07$\x02\x02\xE2" +
		"\xE6\n\x03\x02\x02\xE3\xE4\x07^\x02\x02\xE4\xE6\x07$\x02\x02\xE5\xE2\x03" +
		"\x02\x02\x02\xE5\xE3\x03\x02\x02\x02\xE6\xE9\x03\x02\x02\x02\xE7\xE5\x03" +
		"\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE8\xEA\x03\x02\x02\x02\xE9\xE7\x03" +
		"\x02\x02\x02\xEA\xEB\x07$\x02\x02\xEBN\x03\x02\x02\x02\xEC\xED\x07v\x02" +
		"\x02\xED\xEE\x07t\x02\x02\xEE\xEF\x07w\x02\x02\xEF\xF6\x07g\x02\x02\xF0" +
		"\xF1\x07h\x02\x02\xF1\xF2\x07c\x02\x02\xF2\xF3\x07n\x02\x02\xF3\xF4\x07" +
		"u\x02\x02\xF4\xF6\x07g\x02\x02\xF5\xEC\x03\x02\x02\x02\xF5\xF0\x03\x02" +
		"\x02\x02\xF6P\x03\x02\x02\x02\xF7\xFB\t\x04\x02\x02\xF8\xFA\t\x05\x02" +
		"\x02\xF9\xF8\x03\x02\x02\x02\xFA\xFD\x03\x02\x02\x02\xFB\xF9\x03\x02\x02" +
		"\x02\xFB\xFC\x03\x02\x02\x02\xFCR\x03\x02\x02\x02\xFD\xFB\x03\x02\x02" +
		"\x02\xFE\u0100\t\x06\x02\x02\xFF\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02" +
		"\x02\x02\u0101\xFF\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02\u0102\u0103" +
		"\x03\x02\x02\x02\u0103\u0104\b*\x02\x02\u0104T\x03\x02\x02\x02\u0105\u0106" +
		"\x071\x02\x02\u0106\u0107\x071\x02\x02\u0107\u010B\x03\x02\x02\x02\u0108" +
		"\u010A\n\x07\x02\x02\u0109\u0108\x03\x02\x02\x02\u010A\u010D\x03\x02\x02" +
		"\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02\u010C\u010E" +
		"\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E\u010F\b+\x02\x02\u010F" +
		"V\x03\x02\x02\x02\u0110\u0111\x071\x02\x02\u0111\u0112\x07,\x02\x02\u0112" +
		"\u0116\x03\x02\x02\x02\u0113\u0115\v\x02\x02\x02\u0114\u0113\x03\x02\x02" +
		"\x02\u0115\u0118\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02\u0116\u0114" +
		"\x03\x02\x02\x02\u0117\u0119\x03\x02\x02\x02\u0118\u0116\x03\x02\x02\x02" +
		"\u0119\u011A\x07,\x02\x02\u011A\u011B\x071\x02\x02\u011B\u011C\x03\x02" +
		"\x02\x02\u011C\u011D\b,\x02\x02\u011DX\x03\x02\x02\x02\r\x02\xD7\xDD\xDF" +
		"\xE5\xE7\xF5\xFB\u0101\u010B\u0116\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!LuminaLexer.__ATN) {
			LuminaLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(LuminaLexer._serializedATN));
		}

		return LuminaLexer.__ATN;
	}

}

